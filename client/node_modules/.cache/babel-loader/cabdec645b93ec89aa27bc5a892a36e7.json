{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar opentype = require('opentype.js');\n\nvar FontSubset = require('./subset');\n\nvar PDFName = require('../object/name');\n\nvar PDFObject = require('../object/object');\n\nvar PDFDictionary = require('../object/dictionary');\n\nvar PDFString = require('../object/string');\n\nvar PDFArray = require('../object/array');\n\nvar PDFStream = require('../object/stream');\n\nvar Base = require('./base');\n\nvar StringWidth = Base.StringWidth;\n\nvar util = require('../util');\n\nmodule.exports = /*#__PURE__*/function (_Base) {\n  _inherits(OTFFontFactory, _Base);\n\n  var _super = _createSuper(OTFFontFactory);\n\n  function OTFFontFactory(b) {\n    var _this;\n\n    _classCallCheck(this, OTFFontFactory);\n\n    _this = _super.call(this); // convert to array buffer\n\n    var ab = util.toArrayBuffer(b);\n    _this.font = opentype.parse(ab);\n    return _this;\n  }\n\n  _createClass(OTFFontFactory, [{\n    key: \"instance\",\n    value: function instance() {\n      return new OTFFont(this.font, this);\n    }\n  }]);\n\n  return OTFFontFactory;\n}(Base);\n\nvar OTFFont = /*#__PURE__*/function () {\n  function OTFFont(font, parent) {\n    _classCallCheck(this, OTFFont);\n\n    this.font = font;\n    this.parent = parent;\n    this.subset = new FontSubset(this.font);\n    this.subset.use(' ');\n  }\n\n  _createClass(OTFFont, [{\n    key: \"encode\",\n    value: function encode(str) {\n      this.subset.use(str);\n      return new PDFString(this.subset.encode(str)).toHexString();\n    }\n  }, {\n    key: \"stringWidth\",\n    value: function stringWidth(str, size) {\n      var scale = size / this.font.unitsPerEm;\n      var glyphs = this.font.stringToGlyphs(str);\n      var kerning = [];\n      var width = 0;\n\n      for (var i = 0, len = glyphs.length; i < len; ++i) {\n        var left = glyphs[i];\n        var right = glyphs[i + 1];\n        width += left.advanceWidth;\n\n        if (right) {\n          var offset = -this.font.getKerningValue(left, right);\n\n          if (offset !== 0) {\n            width += offset;\n            kerning.push({\n              pos: i + 1,\n              offset: offset\n            });\n          }\n        }\n      }\n\n      return new StringWidth(width * scale, kerning);\n    }\n  }, {\n    key: \"lineHeight\",\n    value: function lineHeight(size, includeGap) {\n      if (includeGap == null) {\n        includeGap = false;\n      }\n\n      var gap = includeGap ? this.font.tables.os2.sTypoLineGap : 0;\n      var ascent = this.font.tables.os2.sTypoAscender;\n      var descent = this.font.tables.os2.sTypoDescender;\n      return (ascent + gap - descent) * size / this.font.unitsPerEm;\n    }\n  }, {\n    key: \"ascent\",\n    value: function ascent(size) {\n      return this.font.tables.os2.sTypoAscender * size / this.font.unitsPerEm;\n    }\n  }, {\n    key: \"descent\",\n    value: function descent(size) {\n      return this.font.tables.os2.sTypoDescender * size / this.font.unitsPerEm;\n    }\n  }, {\n    key: \"underlinePosition\",\n    value: function underlinePosition(size) {\n      return this.font.tables.post.underlinePosition * size / this.font.unitsPerEm;\n    }\n  }, {\n    key: \"underlineThickness\",\n    value: function underlineThickness(size) {\n      return this.font.tables.post.underlineThickness * size / this.font.unitsPerEm;\n    }\n  }, {\n    key: \"write\",\n    value: function () {\n      var _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(doc, fontObj) {\n        var head, scaleFactor, flags, familyClass, isSerif, isFixedPitch, italicAngle, descriptor, descendant, metrics, codeMap, code, width, cmap, mapping, lines, _code, i, data, hex, file;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                head = this.font.tables.head;\n                scaleFactor = 1000.0 / this.font.unitsPerEm;\n                flags = 0;\n                familyClass = (this.font.tables.os2.sFamilyClass || 0) >> 8;\n                isSerif = !!~[1, 2, 3, 4, 5, 6, 7].indexOf(familyClass);\n                isFixedPitch = this.font.tables.post.isFixedPitch;\n                italicAngle = this.font.tables.post.italicAngle;\n                if (isFixedPitch) flags |= 1 << 0;\n                if (isSerif) flags |= 1 << 1;\n                if (familyClass === 10) flags |= 1 << 3;\n                if (italicAngle !== 0) flags |= 1 << 6;\n                /* assume not being symbolic */\n\n                flags |= 1 << 5; // font descriptor\n\n                descriptor = new PDFObject('FontDescriptor');\n                descriptor.prop('FontName', this.subset.name);\n                descriptor.prop('Flags', flags);\n                descriptor.prop('FontBBox', new PDFArray([head.xMin * scaleFactor, head.yMin * scaleFactor, head.xMax * scaleFactor, head.yMax * scaleFactor]));\n                descriptor.prop('ItalicAngle', italicAngle);\n                descriptor.prop('Ascent', this.font.tables.os2.sTypoAscender * scaleFactor);\n                descriptor.prop('Descent', this.font.tables.os2.sTypoDescender * scaleFactor);\n                descriptor.prop('CapHeight', this.font.tables.os2.sCapHeight * scaleFactor);\n                descriptor.prop('XHeight', this.font.tables.os2.sxHeight * scaleFactor);\n                descriptor.prop('StemV', 0);\n                descendant = new PDFObject('Font');\n                descendant.prop('Subtype', 'CIDFontType0');\n                descendant.prop('BaseFont', this.font.names.postScriptName.en);\n                descendant.prop('DW', 1000);\n                descendant.prop('CIDToGIDMap', 'Identity');\n                descendant.prop('CIDSystemInfo', new PDFDictionary({\n                  'Ordering': new PDFString('Identity'),\n                  'Registry': new PDFString('Adobe'),\n                  'Supplement': 0\n                }));\n                descendant.prop('FontDescriptor', descriptor.toReference());\n                fontObj.prop('Subtype', 'Type0');\n                fontObj.prop('BaseFont', this.font.names.postScriptName.en);\n                fontObj.prop('Encoding', 'Identity-H');\n                fontObj.prop('DescendantFonts', new PDFArray([descendant.toReference()])); // widths array\n\n                metrics = [], codeMap = this.subset.cmap();\n                _context.t0 = _regeneratorRuntime.keys(codeMap);\n\n              case 35:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 44;\n                  break;\n                }\n\n                code = _context.t1.value;\n\n                if (!(code < 32)) {\n                  _context.next = 39;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 35);\n\n              case 39:\n                width = Math.round(this.subset.glyphs[code].advanceWidth * scaleFactor);\n                metrics.push(code - 31);\n                metrics.push(new PDFArray([width]));\n                _context.next = 35;\n                break;\n\n              case 44:\n                descendant.prop('W', new PDFArray(metrics)); // unicode map\n\n                cmap = new PDFStream();\n                cmap.writeLine('/CIDInit /ProcSet findresource begin');\n                cmap.writeLine('12 dict begin');\n                cmap.writeLine('begincmap');\n                cmap.writeLine('/CIDSystemInfo <<');\n                cmap.writeLine('  /Registry (Adobe)');\n                cmap.writeLine('  /Ordering (Identity)');\n                cmap.writeLine('  /Supplement 0');\n                cmap.writeLine('>> def');\n                cmap.writeLine('/CMapName /Identity-H');\n                cmap.writeLine('/CMapType 2 def');\n                cmap.writeLine('1 begincodespacerange');\n                cmap.writeLine('<0000><ffff>');\n                cmap.writeLine('endcodespacerange');\n                mapping = this.subset.subset, lines = [];\n                _context.t2 = _regeneratorRuntime.keys(mapping);\n\n              case 61:\n                if ((_context.t3 = _context.t2()).done) {\n                  _context.next = 69;\n                  break;\n                }\n\n                _code = _context.t3.value;\n\n                if (!(_code < 32)) {\n                  _context.next = 65;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 61);\n\n              case 65:\n                if (lines.length >= 100) {\n                  cmap.writeLine(lines.length + ' beginbfchar');\n\n                  for (i = 0; i < lines.length; ++i) {\n                    cmap.writeLine(lines[i]);\n                  }\n\n                  cmap.writeLine('endbfchar');\n                  lines.length = 0;\n                }\n\n                lines.push('<' + ('0000' + (+_code - 31).toString(16)).slice(-4) + '>' + // cid\n                '<' + ('0000' + mapping[_code].toString(16)).slice(-4) + '>' // gid\n                );\n                _context.next = 61;\n                break;\n\n              case 69:\n                if (lines.length) {\n                  cmap.writeLine(lines.length + ' beginbfchar');\n                  lines.forEach(function (line) {\n                    cmap.writeLine(line);\n                  });\n                  cmap.writeLine('endbfchar');\n                }\n\n                cmap.writeLine('endcmap');\n                cmap.writeLine('CMapName currentdict /CMap defineresource pop');\n                cmap.writeLine('end');\n                cmap.writeLine('end');\n                fontObj.prop('ToUnicode', cmap.toReference()); // font file\n\n                data = this.subset.save();\n                hex = ab2hex(data);\n                file = new PDFStream();\n                file.object.prop('Subtype', 'OpenType');\n                file.object.prop('Length', hex.length + 1);\n                file.object.prop('Length1', data.byteLength);\n                file.object.prop('Filter', 'ASCIIHexDecode');\n                file.content = hex + '>\\n';\n                descriptor.prop('FontFile3', file.toReference());\n                _context.next = 86;\n                return doc._writeObject(file);\n\n              case 86:\n                _context.next = 88;\n                return doc._writeObject(descriptor);\n\n              case 88:\n                _context.next = 90;\n                return doc._writeObject(descendant);\n\n              case 90:\n                _context.next = 92;\n                return doc._writeObject(cmap);\n\n              case 92:\n                _context.next = 94;\n                return doc._writeObject(fontObj);\n\n              case 94:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function write(_x, _x2) {\n        return _write.apply(this, arguments);\n      }\n\n      return write;\n    }()\n  }]);\n\n  return OTFFont;\n}();\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction ab2hex(ab) {\n  var view = new Uint8Array(ab);\n  var hex = '';\n\n  for (var i = 0, len = ab.byteLength; i < len; ++i) {\n    hex += toHex(view[i]);\n  }\n\n  return hex;\n}","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/pdfjs/lib/font/otf.js"],"names":["opentype","require","FontSubset","PDFName","PDFObject","PDFDictionary","PDFString","PDFArray","PDFStream","Base","StringWidth","util","module","exports","b","ab","toArrayBuffer","font","parse","OTFFont","parent","subset","use","str","encode","toHexString","size","scale","unitsPerEm","glyphs","stringToGlyphs","kerning","width","i","len","length","left","right","advanceWidth","offset","getKerningValue","push","pos","includeGap","gap","tables","os2","sTypoLineGap","ascent","sTypoAscender","descent","sTypoDescender","post","underlinePosition","underlineThickness","doc","fontObj","head","scaleFactor","flags","familyClass","sFamilyClass","isSerif","indexOf","isFixedPitch","italicAngle","descriptor","prop","name","xMin","yMin","xMax","yMax","sCapHeight","sxHeight","descendant","names","postScriptName","en","toReference","metrics","codeMap","cmap","code","Math","round","writeLine","mapping","lines","toString","slice","forEach","line","data","save","hex","ab2hex","file","object","byteLength","content","_writeObject","toHex","n","view","Uint8Array"],"mappings":"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","sourcesContent":["'use strict'\n\nconst opentype = require('opentype.js')\nconst FontSubset = require('./subset')\nconst PDFName = require('../object/name')\nconst PDFObject = require('../object/object')\nconst PDFDictionary = require('../object/dictionary')\nconst PDFString = require('../object/string')\nconst PDFArray = require('../object/array')\nconst PDFStream = require('../object/stream')\nconst Base = require('./base')\nconst StringWidth = Base.StringWidth\nconst util = require('../util')\n\nmodule.exports = class OTFFontFactory extends Base {\n  constructor(b) {\n    super()\n\n    // convert to array buffer\n    const ab = util.toArrayBuffer(b)\n    this.font = opentype.parse(ab)\n  }\n\n  instance() {\n    return new OTFFont(this.font, this)\n  }\n}\n\nclass OTFFont {\n  constructor(font, parent) {\n    this.font = font\n    this.parent = parent\n\n    this.subset = new FontSubset(this.font)\n    this.subset.use(' ')\n  }\n\n  encode(str) {\n    this.subset.use(str)\n    return (new PDFString(this.subset.encode(str))).toHexString()\n  }\n\n  stringWidth(str, size) {\n    const scale  = size / this.font.unitsPerEm\n    const glyphs = this.font.stringToGlyphs(str)\n    const kerning = []\n\n    let width = 0\n    for (let i = 0, len = glyphs.length; i < len; ++i) {\n      const left  = glyphs[i]\n      const right = glyphs[i + 1]\n\n      width += left.advanceWidth\n      if (right) {\n        const offset = -this.font.getKerningValue(left, right);\n\n        if (offset !== 0) {\n          width += offset\n          kerning.push({ pos: i + 1, offset: offset })\n        }\n      }\n    }\n\n    return new StringWidth(width * scale, kerning)\n  }\n\n  lineHeight(size, includeGap) {\n    if (includeGap == null) {\n      includeGap = false\n    }\n\n    const gap = includeGap ? this.font.tables.os2.sTypoLineGap : 0\n    const ascent = this.font.tables.os2.sTypoAscender\n    const descent = this.font.tables.os2.sTypoDescender\n\n    return (ascent + gap - descent) * size / this.font.unitsPerEm\n  }\n\n  ascent(size) {\n    return this.font.tables.os2.sTypoAscender * size / this.font.unitsPerEm\n  }\n\n  descent(size) {\n    return this.font.tables.os2.sTypoDescender * size / this.font.unitsPerEm\n  }\n\n  underlinePosition(size) {\n    return this.font.tables.post.underlinePosition * size / this.font.unitsPerEm\n  }\n\n  underlineThickness(size) {\n    return this.font.tables.post.underlineThickness * size / this.font.unitsPerEm\n  }\n\n  async write(doc, fontObj) {\n    const head = this.font.tables.head\n\n    const scaleFactor = 1000.0 / this.font.unitsPerEm\n\n    let flags = 0\n    const familyClass = (this.font.tables.os2.sFamilyClass || 0) >> 8\n    const isSerif = !!~[1, 2, 3, 4, 5, 6, 7].indexOf(familyClass)\n    const isFixedPitch = this.font.tables.post.isFixedPitch\n    const italicAngle = this.font.tables.post.italicAngle\n\n    if (isFixedPitch)                  flags |= 1 << 0\n    if (isSerif)                       flags |= 1 << 1\n    if (familyClass === 10)            flags |= 1 << 3\n    if (italicAngle !== 0)             flags |= 1 << 6\n    /* assume not being symbolic */    flags |= 1 << 5\n\n    // font descriptor\n    const descriptor = new PDFObject('FontDescriptor')\n    descriptor.prop('FontName', this.subset.name)\n    descriptor.prop('Flags', flags)\n    descriptor.prop('FontBBox', new PDFArray([\n      head.xMin * scaleFactor, head.yMin * scaleFactor,\n      head.xMax * scaleFactor, head.yMax * scaleFactor\n    ]))\n    descriptor.prop('ItalicAngle', italicAngle)\n    descriptor.prop('Ascent', this.font.tables.os2.sTypoAscender * scaleFactor)\n    descriptor.prop('Descent', this.font.tables.os2.sTypoDescender * scaleFactor)\n    descriptor.prop('CapHeight', this.font.tables.os2.sCapHeight * scaleFactor)\n    descriptor.prop('XHeight', this.font.tables.os2.sxHeight * scaleFactor)\n    descriptor.prop('StemV', 0)\n\n    const descendant = new PDFObject('Font')\n    descendant.prop('Subtype', 'CIDFontType0')\n    descendant.prop('BaseFont', this.font.names.postScriptName.en)\n    descendant.prop('DW', 1000)\n    descendant.prop('CIDToGIDMap', 'Identity')\n    descendant.prop('CIDSystemInfo', new PDFDictionary({\n      'Ordering':   new PDFString('Identity'),\n      'Registry':   new PDFString('Adobe'),\n      'Supplement': 0\n    }))\n    descendant.prop('FontDescriptor', descriptor.toReference())\n\n    fontObj.prop('Subtype', 'Type0')\n    fontObj.prop('BaseFont', this.font.names.postScriptName.en)\n    fontObj.prop('Encoding', 'Identity-H')\n    fontObj.prop('DescendantFonts', new PDFArray([descendant.toReference()]))\n\n    // widths array\n    const metrics = [], codeMap = this.subset.cmap()\n    for (const code in codeMap) {\n      if (code < 32) {\n        continue\n      }\n\n      const width = Math.round(this.subset.glyphs[code].advanceWidth * scaleFactor)\n      metrics.push(code - 31)\n      metrics.push(new PDFArray([width]))\n    }\n\n    descendant.prop('W', new PDFArray(metrics))\n\n    // unicode map\n    const cmap = new PDFStream()\n    cmap.writeLine('/CIDInit /ProcSet findresource begin')\n    cmap.writeLine('12 dict begin')\n    cmap.writeLine('begincmap')\n    cmap.writeLine('/CIDSystemInfo <<')\n    cmap.writeLine('  /Registry (Adobe)')\n    cmap.writeLine('  /Ordering (Identity)')\n    cmap.writeLine('  /Supplement 0')\n    cmap.writeLine('>> def')\n    cmap.writeLine('/CMapName /Identity-H')\n    cmap.writeLine('/CMapType 2 def')\n    cmap.writeLine('1 begincodespacerange')\n    cmap.writeLine('<0000><ffff>')\n    cmap.writeLine('endcodespacerange')\n\n    const mapping = this.subset.subset, lines = []\n    for (const code in mapping) {\n      if (code < 32) {\n        continue\n      }\n\n      if (lines.length >= 100) {\n        cmap.writeLine(lines.length + ' beginbfchar')\n        for (let i = 0; i < lines.length; ++i) {\n          cmap.writeLine(lines[i])\n        }\n        cmap.writeLine('endbfchar')\n        lines.length = 0\n      }\n\n      lines.push(\n        '<' + ('0000' + (+code - 31).toString(16)).slice(-4) + '>' + // cid\n        '<' + ('0000' + mapping[code].toString(16)).slice(-4) + '>'  // gid\n      )\n    }\n\n    if (lines.length) {\n      cmap.writeLine(lines.length + ' beginbfchar')\n      lines.forEach(function(line) {\n        cmap.writeLine(line)\n      })\n      cmap.writeLine('endbfchar')\n    }\n\n    cmap.writeLine('endcmap')\n    cmap.writeLine('CMapName currentdict /CMap defineresource pop')\n    cmap.writeLine('end')\n    cmap.writeLine('end')\n\n    fontObj.prop('ToUnicode', cmap.toReference())\n\n    // font file\n    const data = this.subset.save()\n    const hex = ab2hex(data)\n\n    const file = new PDFStream()\n    file.object.prop('Subtype', 'OpenType')\n    file.object.prop('Length', hex.length + 1)\n    file.object.prop('Length1', data.byteLength)\n    file.object.prop('Filter', 'ASCIIHexDecode')\n    file.content = hex + '>\\n'\n\n    descriptor.prop('FontFile3', file.toReference())\n\n    await doc._writeObject(file)\n    await doc._writeObject(descriptor)\n    await doc._writeObject(descendant)\n    await doc._writeObject(cmap)\n    await doc._writeObject(fontObj)\n  }\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction ab2hex(ab) {\n  const view = new Uint8Array(ab)\n  let hex = ''\n  for (let i = 0, len = ab.byteLength; i < len; ++i) {\n    hex += toHex(view[i])\n  }\n  return hex\n}\n"]},"metadata":{},"sourceType":"script"}