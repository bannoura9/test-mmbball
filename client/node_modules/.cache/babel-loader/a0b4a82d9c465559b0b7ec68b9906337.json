{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar PDFName = require('./name');\n\nvar PDFString = require('./string');\n\nvar PDFDictionary = require('./dictionary');\n\nvar PDFArray = require('./array');\n\nvar PDFNameTree = /*#__PURE__*/function (_PDFDictionary) {\n  _inherits(PDFNameTree, _PDFDictionary);\n\n  var _super = _createSuper(PDFNameTree);\n\n  function PDFNameTree(dictionary) {\n    _classCallCheck(this, PDFNameTree);\n\n    return _super.call(this, dictionary);\n  }\n\n  _createClass(PDFNameTree, [{\n    key: \"add\",\n    value: function add(key, val) {\n      if (typeof val === 'string') {\n        val = new PDFName(val);\n      }\n\n      this.dictionary[key] = val;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return String(key) in this.dictionary;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.dictionary[key];\n    }\n  }, {\n    key: \"del\",\n    value: function del(key) {\n      delete this.dictionary[key];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var sortedKeys = Object.keys(this.dictionary);\n      sortedKeys.sort(function (lhs, rhs) {\n        return lhs.localeCompare(rhs);\n      });\n      var names = [];\n\n      for (var _i = 0, _sortedKeys = sortedKeys; _i < _sortedKeys.length; _i++) {\n        var key = _sortedKeys[_i];\n        names.push(new PDFString(key), this.dictionary[key]);\n      }\n\n      var dict = new PDFDictionary();\n      dict.set(\"Names\", new PDFArray(names));\n      dict.set(\"Limits\", new PDFArray([new PDFString(sortedKeys[0]), new PDFString(sortedKeys[sortedKeys.length - 1])]));\n      return dict.toString();\n    }\n  }]);\n\n  return PDFNameTree;\n}(PDFDictionary);\n\nmodule.exports = PDFNameTree;","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/pdfjs/lib/object/nametree.js"],"names":["PDFName","require","PDFString","PDFDictionary","PDFArray","PDFNameTree","dictionary","key","val","String","sortedKeys","Object","keys","sort","lhs","rhs","localeCompare","names","push","dict","set","length","toString","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,QAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,UAAD,CAAzB;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,cAAD,CAA7B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,SAAD,CAAxB;;IAEMI,W;;;;;AACJ,uBAAYC,UAAZ,EAAwB;AAAA;;AAAA,6BAChBA,UADgB;AAEvB;;;;WAED,aAAIC,GAAJ,EAASC,GAAT,EAAc;AACZ,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,QAAAA,GAAG,GAAG,IAAIR,OAAJ,CAAYQ,GAAZ,CAAN;AACD;;AACD,WAAKF,UAAL,CAAgBC,GAAhB,IAAuBC,GAAvB;AACD;;;WAED,aAAID,GAAJ,EAAS;AACP,aAAOE,MAAM,CAACF,GAAD,CAAN,IAAe,KAAKD,UAA3B;AACD;;;WAED,aAAIC,GAAJ,EAAS;AACP,aAAO,KAAKD,UAAL,CAAgBC,GAAhB,CAAP;AACD;;;WAED,aAAIA,GAAJ,EAAS;AACP,aAAO,KAAKD,UAAL,CAAgBC,GAAhB,CAAP;AACD;;;WAED,oBAAW;AACT,UAAMG,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKN,UAAjB,CAAnB;AACAI,MAAAA,UAAU,CAACG,IAAX,CAAgB,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAcD,GAAG,CAACE,aAAJ,CAAkBD,GAAlB,CAAd;AAAA,OAAhB;AAEA,UAAME,KAAK,GAAG,EAAd;;AACA,qCAAkBP,UAAlB,iCAA8B;AAAzB,YAAMH,GAAG,kBAAT;AACHU,QAAAA,KAAK,CAACC,IAAN,CAAW,IAAIhB,SAAJ,CAAcK,GAAd,CAAX,EAA+B,KAAKD,UAAL,CAAgBC,GAAhB,CAA/B;AACD;;AAED,UAAMY,IAAI,GAAG,IAAIhB,aAAJ,EAAb;AACAgB,MAAAA,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkB,IAAIhB,QAAJ,CAAaa,KAAb,CAAlB;AACAE,MAAAA,IAAI,CAACC,GAAL,CAAS,QAAT,EAAmB,IAAIhB,QAAJ,CAAa,CAC9B,IAAIF,SAAJ,CAAcQ,UAAU,CAAC,CAAD,CAAxB,CAD8B,EAE9B,IAAIR,SAAJ,CAAcQ,UAAU,CAACA,UAAU,CAACW,MAAX,GAAoB,CAArB,CAAxB,CAF8B,CAAb,CAAnB;AAIA,aAAOF,IAAI,CAACG,QAAL,EAAP;AACD;;;;EAxCuBnB,a;;AA2C1BoB,MAAM,CAACC,OAAP,GAAiBnB,WAAjB","sourcesContent":["'use strict'\n\nconst PDFName = require('./name')\nconst PDFString = require('./string')\nconst PDFDictionary = require('./dictionary')\nconst PDFArray = require('./array')\n\nclass PDFNameTree extends PDFDictionary {\n  constructor(dictionary) {\n    super(dictionary)\n  }\n\n  add(key, val) {\n    if (typeof val === 'string') {\n      val = new PDFName(val)\n    }\n    this.dictionary[key] = val\n  }\n\n  has(key) {\n    return String(key) in this.dictionary\n  }\n\n  get(key) {\n    return this.dictionary[key]\n  }\n\n  del(key) {\n    delete this.dictionary[key]\n  }\n\n  toString() {\n    const sortedKeys = Object.keys(this.dictionary)\n    sortedKeys.sort((lhs, rhs) => lhs.localeCompare(rhs))\n\n    const names = []\n    for (const key of sortedKeys) {\n      names.push(new PDFString(key), this.dictionary[key])\n    }\n\n    const dict = new PDFDictionary()\n    dict.set(\"Names\", new PDFArray(names))\n    dict.set(\"Limits\", new PDFArray([\n      new PDFString(sortedKeys[0]),\n      new PDFString(sortedKeys[sortedKeys.length - 1]),\n    ]))\n    return dict.toString()\n  }\n}\n\nmodule.exports = PDFNameTree\n"]},"metadata":{},"sourceType":"script"}