{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx\";\n\nimport React, { useEffect } from \"react\";\nimport { groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\nvar playlistIds = [''];\n\nvar VideoLibrary = function VideoLibrary() {\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {//   const res = await fetch(\n                //     \"https://www.googleapis.com/youtube/v3/playlistItems?\" +\n                //       new URLSearchParams({\n                //         /* part: \"id,snippet\",\n                //             key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                //             channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                //             maxResults: 200, */\n                //         key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                //         part: \"id,contentDetails,snippet,status\",\n                //         playlistId: \"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\",\n                //       })\n                //   );\n                //   const resJson = await res.json();\n                //   console.log(\"data==>>\", resJson);\n                //   console.log(\"data==>>\", groupBy(mockData.items, \"id.kind\"));\n              } catch (err) {\n                console.log(\"err==>>\", err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Hello\", /*#__PURE__*/React.createElement(RecentlyAdded, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoLibrary;","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx"],"names":["React","useEffect","groupBy","RecentlyAdded","mockData","playlistIds","VideoLibrary","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,IAAMC,WAAW,GAAG,CAAC,EAAD,CAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AACC,kBAAI,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACD,eAhBD,CAgBE,OAAOM,GAAP,EAAY;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD;;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAqBD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA/BD;;AAiCA,eAAeD,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\n\nconst playlistIds = ['']\n\nconst VideoLibrary = () => {\n  useEffect(() => {\n    (async () => {\n      try {\n      //   const res = await fetch(\n      //     \"https://www.googleapis.com/youtube/v3/playlistItems?\" +\n      //       new URLSearchParams({\n      //         /* part: \"id,snippet\",\n      //             key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n      //             channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n      //             maxResults: 200, */\n      //         key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n      //         part: \"id,contentDetails,snippet,status\",\n      //         playlistId: \"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\",\n      //       })\n      //   );\n      //   const resJson = await res.json();\n      //   console.log(\"data==>>\", resJson);\n        //   console.log(\"data==>>\", groupBy(mockData.items, \"id.kind\"));\n      } catch (err) {\n        console.log(\"err==>>\", err);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      Hello\n      <RecentlyAdded />\n    </div>\n  );\n};\n\nexport default VideoLibrary;\n"]},"metadata":{},"sourceType":"module"}