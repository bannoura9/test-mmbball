{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { flattenDeep, groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\nvar playlistIds = [\"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\", \"PLtAzkECGU1yXhKBF1t-pJmH8S1nuBiu8z\"];\n\nvar VideoLibrary = function VideoLibrary() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      playlists = _useState2[0],\n      setPlaylists = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      videos = _useState4[0],\n      setVideos = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var playlistRes, playlistResJsOn, playlistItemsResJsOn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"https://www.googleapis.com/youtube/v3/playlists?\" + new URLSearchParams({\n                key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                part: \"id,snippet\",\n                id: playlistIds.join(\",\")\n              }));\n\n            case 3:\n              playlistRes = _context2.sent;\n              _context2.next = 6;\n              return playlistRes.json();\n\n            case 6:\n              playlistResJsOn = _context2.sent;\n              console.log(\"playlistResJsOn==>>\", playlistResJsOn.items.map(function (_ref2) {\n                var id = _ref2.id,\n                    snippet = _ref2.snippet;\n                return {\n                  id: id,\n                  title: snippet.localized.title\n                };\n              }));\n              setPlaylists(playlistResJsOn.items.map(function (_ref3) {\n                var id = _ref3.id,\n                    snippet = _ref3.snippet;\n                return {\n                  id: id,\n                  title: snippet.localized.title\n                };\n              }));\n              _context2.next = 11;\n              return Promise.all(playlistIds.map( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(playlistId) {\n                  var playlistItemsRes;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetch(\"https://www.googleapis.com/youtube/v3/playlistItems?\" + new URLSearchParams({\n                            part: \"snippet\",\n                            key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                            channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                            maxResults: 200,\n                            playlistId: playlistId\n                          }));\n\n                        case 2:\n                          playlistItemsRes = _context.sent;\n                          return _context.abrupt(\"return\", playlistItemsRes.json());\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()));\n\n            case 11:\n              playlistItemsResJsOn = _context2.sent;\n              console.log(\"playlistItemsResJsOn==>>\", flattenDeep(playlistItemsResJsOn.map(function (playlistItems) {\n                return playlistItems.items.map(function (i) {\n                  return i.snippet;\n                });\n              })));\n              setVideos(flattenDeep(playlistItemsResJsOn.map(function (playlistItems) {\n                return playlistItems.items.map(function (i) {\n                  return i.snippet;\n                });\n              })));\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"err==>>\", _context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16]]);\n    }))();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Hello\", /*#__PURE__*/React.createElement(RecentlyAdded, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoLibrary;","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx"],"names":["React","useEffect","useState","flattenDeep","groupBy","RecentlyAdded","mockData","playlistIds","VideoLibrary","playlists","setPlaylists","videos","setVideos","fetch","URLSearchParams","key","part","id","join","playlistRes","json","playlistResJsOn","console","log","items","map","snippet","title","localized","Promise","all","playlistId","channelId","maxResults","playlistItemsRes","playlistItemsResJsOn","playlistItems","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { flattenDeep, groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\n\nconst playlistIds = [\n  \"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\",\n  \"PLtAzkECGU1yXhKBF1t-pJmH8S1nuBiu8z\",\n];\n\nconst VideoLibrary = () => {\n  const [playlists, setPlaylists] = useState([]);\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const playlistRes = await fetch(\n          \"https://www.googleapis.com/youtube/v3/playlists?\" +\n            new URLSearchParams({\n              key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n              part: \"id,snippet\",\n              id: playlistIds.join(\",\"),\n            })\n        );\n        const playlistResJsOn = await playlistRes.json();\n        console.log(\n          \"playlistResJsOn==>>\",\n          playlistResJsOn.items.map(({ id, snippet }) => ({\n            id,\n            title: snippet.localized.title,\n          }))\n        );\n        setPlaylists(\n          playlistResJsOn.items.map(({ id, snippet }) => ({\n            id,\n            title: snippet.localized.title,\n          }))\n        );\n\n        const playlistItemsResJsOn = await Promise.all(\n          playlistIds.map(async (playlistId) => {\n            const playlistItemsRes = await fetch(\n              \"https://www.googleapis.com/youtube/v3/playlistItems?\" +\n                new URLSearchParams({\n                  part: \"snippet\",\n                  key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                  channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                  maxResults: 200,\n                  playlistId,\n                })\n            );\n            return playlistItemsRes.json();\n          })\n        );\n\n        console.log(\n          \"playlistItemsResJsOn==>>\",\n          flattenDeep(\n            playlistItemsResJsOn.map((playlistItems) =>\n              playlistItems.items.map((i) => i.snippet)\n            )\n          )\n        );\n        setVideos(\n          flattenDeep(\n            playlistItemsResJsOn.map((playlistItems) =>\n              playlistItems.items.map((i) => i.snippet)\n            )\n          )\n        );\n      } catch (err) {\n        console.log(\"err==>>\", err);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      Hello\n      <RecentlyAdded />\n    </div>\n  );\n};\n\nexport default VideoLibrary;\n"]},"metadata":{},"sourceType":"module"}