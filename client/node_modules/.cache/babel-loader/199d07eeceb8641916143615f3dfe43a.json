{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar version = require('../../package.json').version;\n\nvar PDFDictionary = require('./dictionary');\n\nvar PDFArray = require('./array');\n\nvar PDFString = require('./string');\n\nvar InfoKeys = {\n  title: 'Title',\n  author: 'Author',\n  subject: 'Subject',\n  keywords: 'Keywords',\n  creator: 'Creator',\n  producer: 'Producer',\n  creationDate: 'CreationDate',\n  modDate: 'ModDate'\n};\n\nvar PDFTrailer = /*#__PURE__*/function (_PDFDictionary) {\n  _inherits(PDFTrailer, _PDFDictionary);\n\n  var _super = _createSuper(PDFTrailer);\n\n  function PDFTrailer(size, root, info) {\n    var _this;\n\n    _classCallCheck(this, PDFTrailer);\n\n    _this = _super.call(this);\n\n    _this.set('Size', size);\n\n    _this.set('Root', root && root.toReference());\n\n    var id = new PDFString(info.id).toHexString();\n\n    _this.set('ID', new PDFArray([id, id])); // Default to now and convert to string\n\n\n    info.creationDate = formatDate(info.creationDate || new Date());\n\n    if (!info.producer) {\n      // Set default producer if not one provided\n      info.producer = \"pdfjs v\".concat(version, \" (github.com/rkusa/pdfjs)\");\n    }\n\n    if ('modDate' in info) {\n      // Convert to string\n      info.modDate = formatDate(info.modDate);\n    }\n\n    var infoDictionary = {};\n\n    for (var key in InfoKeys) {\n      if (key in info) {\n        infoDictionary[InfoKeys[key]] = new PDFString(info[key]);\n      }\n    }\n\n    _this.set('Info', new PDFDictionary(infoDictionary));\n\n    return _this;\n  }\n\n  _createClass(PDFTrailer, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'trailer\\n' + PDFDictionary.prototype.toString.call(this);\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(xref, lexer) {\n      lexer.skipWhitespace(null, true);\n\n      if (lexer.readString(7) !== 'trailer') {\n        throw new Error('Invalid trailer: trailer expected but not found');\n      }\n\n      lexer.skipWhitespace(null, true);\n      var dict = PDFDictionary.parse(xref, lexer);\n      return dict;\n    }\n  }]);\n\n  return PDFTrailer;\n}(PDFDictionary);\n\nmodule.exports = PDFTrailer;\n\nfunction formatDate(date) {\n  var str = 'D:' + date.getFullYear() + ('00' + (date.getMonth() + 1)).slice(-2) + ('00' + date.getDate()).slice(-2) + ('00' + date.getHours()).slice(-2) + ('00' + date.getMinutes()).slice(-2) + ('00' + date.getSeconds()).slice(-2);\n  var offset = date.getTimezoneOffset();\n  var rel = offset === 0 ? 'Z' : offset > 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  var hoursOffset = Math.floor(offset / 60);\n  var minutesOffset = offset - hoursOffset * 60;\n  str += rel + ('00' + hoursOffset).slice(-2) + '\\'' + ('00' + minutesOffset).slice(-2) + '\\'';\n  return str;\n}","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/pdfjs/lib/object/trailer.js"],"names":["version","require","PDFDictionary","PDFArray","PDFString","InfoKeys","title","author","subject","keywords","creator","producer","creationDate","modDate","PDFTrailer","size","root","info","set","toReference","id","toHexString","formatDate","Date","infoDictionary","key","prototype","toString","call","xref","lexer","skipWhitespace","readString","Error","dict","parse","module","exports","date","str","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","offset","getTimezoneOffset","rel","Math","abs","hoursOffset","floor","minutesOffset"],"mappings":"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","sourcesContent":["'use strict'\n\nconst version       = require('../../package.json').version\nconst PDFDictionary = require('./dictionary')\nconst PDFArray      = require('./array')\nconst PDFString     = require('./string')\n\nconst InfoKeys = {\n  title: 'Title',\n  author: 'Author',\n  subject: 'Subject',\n  keywords: 'Keywords',\n  creator: 'Creator',\n  producer: 'Producer',\n  creationDate: 'CreationDate',\n  modDate: 'ModDate'\n}\n\nclass PDFTrailer extends PDFDictionary {\n  constructor(size, root, info) {\n    super()\n\n    this.set('Size', size)\n    this.set('Root', root && root.toReference())\n\n    const id = (new PDFString(info.id)).toHexString()\n    this.set('ID', new PDFArray([id, id]))\n    \n    // Default to now and convert to string\n    info.creationDate = formatDate(info.creationDate || new Date)\n    if (!info.producer) {\n      // Set default producer if not one provided\n      info.producer = `pdfjs v${version} (github.com/rkusa/pdfjs)`\n    }\n    if ('modDate' in info) {\n    \t// Convert to string\n      info.modDate = formatDate(info.modDate)\n    }\n\n    const infoDictionary = {}\n\n    for (const key in InfoKeys) {\n      if (key in info) {\n        infoDictionary[InfoKeys[key]] = new PDFString(info[key])\n      }\n    }\n\n    this.set('Info', new PDFDictionary(infoDictionary))\n  }\n\n  toString() {\n    return 'trailer\\n' + PDFDictionary.prototype.toString.call(this)\n  }\n\n  static parse(xref, lexer) {\n    lexer.skipWhitespace(null, true)\n\n    if (lexer.readString(7) !== 'trailer') {\n      throw new Error('Invalid trailer: trailer expected but not found')\n    }\n\n    lexer.skipWhitespace(null, true)\n\n    const dict = PDFDictionary.parse(xref, lexer)\n    return dict\n  }\n}\n\nmodule.exports = PDFTrailer\n\nfunction formatDate(date) {\n  let str = 'D:'\n          + date.getFullYear()\n          + ('00' + (date.getMonth() + 1)).slice(-2)\n          + ('00' + date.getDate()).slice(-2)\n          + ('00' + date.getHours()).slice(-2)\n          + ('00' + date.getMinutes()).slice(-2)\n          + ('00' + date.getSeconds()).slice(-2)\n\n  let offset = date.getTimezoneOffset()\n  const rel = offset === 0 ? 'Z' : (offset > 0 ? '-' : '+')\n  offset = Math.abs(offset)\n  const hoursOffset = Math.floor(offset / 60)\n  const minutesOffset = offset - hoursOffset * 60\n\n  str += rel\n      + ('00' + hoursOffset).slice(-2)   + '\\''\n      + ('00' + minutesOffset).slice(-2) + '\\''\n\n  return str\n}\n"]},"metadata":{},"sourceType":"script"}