{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx\";\n\nimport React, { useEffect } from \"react\";\nimport { groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\n\nvar VideoLibrary = function VideoLibrary() {\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, resJson;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"https://www.googleapis.com/youtube/v3/playlistItems?\" + new URLSearchParams({\n                /* part: \"id,snippet\",\n                key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                maxResults: 200, */\n                partcontentDetails: partcontentDetails\n              }));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              resJson = _context.sent;\n              console.log(\"data==>>\", groupBy(mockData.items, \"id.kind\"));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"err==>>\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }))();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Hello\", /*#__PURE__*/React.createElement(RecentlyAdded, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoLibrary;","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx"],"names":["React","useEffect","groupBy","RecentlyAdded","mockData","VideoLibrary","fetch","URLSearchParams","partcontentDetails","res","json","resJson","console","log","items"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBJ,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEuBK,KAAK,CACrB,yDACE,IAAIC,eAAJ,CAAoB;AAClB;AAChB;AACA;AACA;AACgBC,gBAAAA,kBAAkB,EAAlBA;AALkB,eAApB,CAFmB,CAF5B;;AAAA;AAEWC,cAAAA,GAFX;AAAA;AAAA,qBAY2BA,GAAG,CAACC,IAAJ,EAZ3B;;AAAA;AAYWC,cAAAA,OAZX;AAaGC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,OAAO,CAACE,QAAQ,CAACU,KAAV,EAAiB,SAAjB,CAA/B;AAbH;AAAA;;AAAA;AAAA;AAAA;AAeGF,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA5BD;;AA8BA,eAAeR,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\n\nconst VideoLibrary = () => {\n  useEffect(() => {\n    (async () => {\n      try {\n          const res = await fetch(\n            \"https://www.googleapis.com/youtube/v3/playlistItems?\" +\n              new URLSearchParams({\n                /* part: \"id,snippet\",\n                key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                maxResults: 200, */\n                partcontentDetails,\n              })\n          );\n          const resJson = await res.json();\n        console.log(\"data==>>\", groupBy(mockData.items, \"id.kind\"));\n      } catch (err) {\n        console.log(\"err==>>\", err);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      Hello\n      <RecentlyAdded />\n    </div>\n  );\n};\n\nexport default VideoLibrary;\n"]},"metadata":{},"sourceType":"module"}