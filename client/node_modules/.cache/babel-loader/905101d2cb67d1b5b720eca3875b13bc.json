{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar UnicodeTrie = require('unicode-trie');\n\nvar ref = require('./classes');\n\nvar _require = require('./classes'),\n    BK = _require.BK,\n    CR = _require.CR,\n    LF = _require.LF,\n    NL = _require.NL,\n    CB = _require.CB,\n    BA = _require.BA,\n    SP = _require.SP,\n    WJ = _require.WJ,\n    AI = _require.AI,\n    AL = _require.AL,\n    SA = _require.SA,\n    SG = _require.SG,\n    XX = _require.XX,\n    CJ = _require.CJ,\n    ID = _require.ID,\n    NS = _require.NS,\n    characterClasses = _require.characterClasses;\n\nvar _require2 = require('./pairs'),\n    DI_BRK = _require2.DI_BRK,\n    IN_BRK = _require2.IN_BRK,\n    CI_BRK = _require2.CI_BRK,\n    CP_BRK = _require2.CP_BRK,\n    PR_BRK = _require2.PR_BRK,\n    pairTable = _require2.pairTable;\n\nvar classTrie = new UnicodeTrie(hex2ab(require('./classes.json').buf));\n\nvar Break = function Break(position, required) {\n  _classCallCheck(this, Break);\n\n  this.position = position;\n  this.required = required != null ? required : false;\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function LineBreaker(string) {\n    _classCallCheck(this, LineBreaker);\n\n    this.string = string;\n    this.pos = 0;\n    this.lastPos = 0;\n    this.curClass = null;\n    this.nextClass = null;\n  }\n\n  _createClass(LineBreaker, [{\n    key: \"nextCodePoint\",\n    value: function nextCodePoint() {\n      var code = this.string.charCodeAt(this.pos++);\n      var next = this.string.charCodeAt(this.pos); // If a surrogate pair\n\n      if (0xd800 <= code && code <= 0xdbff && 0xdc00 <= next && next <= 0xdfff) {\n        this.pos++;\n        return (code - 0xd800) * 0x400 + (next - 0xdc00) + 0x10000;\n      }\n\n      return code;\n    }\n  }, {\n    key: \"nextCharClass\",\n    value: function nextCharClass(first) {\n      if (first == null) {\n        first = false;\n      }\n\n      return mapClass(classTrie.get(this.nextCodePoint()));\n    }\n  }, {\n    key: \"nextBreak\",\n    value: function nextBreak() {\n      // get the first char if we're at the beginning of the string\n      if (this.curClass == null) {\n        this.curClass = mapFirst(this.nextCharClass());\n      }\n\n      while (this.pos < this.string.length) {\n        this.lastPos = this.pos;\n        var lastClass = this.nextClass;\n        this.nextClass = this.nextCharClass(); // explicit newline\n\n        if (this.curClass === BK || this.curClass === CR && this.nextClass !== LF) {\n          this.curClass = mapFirst(mapClass(this.nextClass));\n          return new Break(this.lastPos, true);\n        } // handle classes not handled by the pair table\n\n\n        var cur = null;\n\n        switch (this.nextClass) {\n          case SP:\n            cur = this.curClass;\n            break;\n\n          case BK:\n          case LF:\n          case NL:\n            cur = BK;\n            break;\n\n          case CR:\n            cur = CR;\n            break;\n\n          case CB:\n            cur = BA;\n            break;\n        }\n\n        if (cur != null) {\n          this.curClass = cur;\n\n          if (this.nextClass === CB) {\n            return new Break(this.lastPos);\n          }\n\n          continue;\n        } // if not handled already, use the pair table\n\n\n        var shouldBreak = false;\n\n        switch (pairTable[this.curClass][this.nextClass]) {\n          case DI_BRK:\n            // Direct break\n            shouldBreak = true;\n            break;\n\n          case IN_BRK:\n            // possible indirect break\n            shouldBreak = lastClass === SP;\n            break;\n\n          case CI_BRK:\n            // prohibited for combining marks\n            shouldBreak = lastClass === SP;\n\n            if (!shouldBreak) {\n              continue;\n            }\n\n            break;\n\n          case CP_BRK:\n            if (lastClass !== SP) {\n              continue;\n            }\n\n        }\n\n        this.curClass = this.nextClass;\n\n        if (shouldBreak) {\n          return new Break(this.lastPos);\n        }\n      }\n\n      if (this.pos >= this.string.length) {\n        if (this.lastPos < this.string.length) {\n          this.lastPos = this.string.length;\n          return new Break(this.string.length);\n        } else {\n          return null;\n        }\n      }\n    }\n  }]);\n\n  return LineBreaker;\n}();\n\nfunction mapClass(c) {\n  switch (c) {\n    case AI:\n      return AL;\n\n    case SA:\n    case SG:\n    case XX:\n      return AL;\n\n    case CJ:\n      return NS;\n\n    default:\n      return c;\n  }\n}\n\nfunction mapFirst(c) {\n  switch (c) {\n    case LF:\n    case NL:\n      return BK;\n\n    case CB:\n      return BA;\n\n    case SP:\n      return WJ;\n\n    default:\n      return c;\n  }\n}\n\nfunction hex2ab(hex) {\n  var view = new Uint8Array(hex.length / 2);\n\n  for (var i = 0; i < hex.length; i += 2) {\n    view[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n\n  return view;\n}","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/@rkusa/linebreak/src/linebreaker.js"],"names":["UnicodeTrie","require","ref","BK","CR","LF","NL","CB","BA","SP","WJ","AI","AL","SA","SG","XX","CJ","ID","NS","characterClasses","DI_BRK","IN_BRK","CI_BRK","CP_BRK","PR_BRK","pairTable","classTrie","hex2ab","buf","Break","position","required","module","exports","string","pos","lastPos","curClass","nextClass","code","charCodeAt","next","first","mapClass","get","nextCodePoint","mapFirst","nextCharClass","length","lastClass","cur","shouldBreak","c","hex","view","Uint8Array","i","parseInt","substring"],"mappings":"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","sourcesContent":["'use strict'\n\nconst UnicodeTrie = require('unicode-trie')\nconst ref = require('./classes')\nconst { BK, CR, LF, NL, CB, BA, SP, WJ, AI, AL, SA, SG, XX, CJ, ID, NS, characterClasses} = require('./classes')\nconst { DI_BRK, IN_BRK, CI_BRK, CP_BRK, PR_BRK, pairTable } = require('./pairs')\n\nconst classTrie = new UnicodeTrie(hex2ab(require('./classes.json').buf))\n\nclass Break {\n  constructor(position, required) {\n    this.position = position\n    this.required = required != null ? required : false\n  }\n}\n\nmodule.exports = class LineBreaker {\n  constructor(string) {\n    this.string = string\n    this.pos = 0\n    this.lastPos = 0\n    this.curClass = null\n    this.nextClass = null\n  }\n\n  nextCodePoint() {\n    const code = this.string.charCodeAt(this.pos++)\n    const next = this.string.charCodeAt(this.pos)\n\n    // If a surrogate pair\n    if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {\n      this.pos++\n      return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000\n    }\n\n    return code\n  }\n\n  nextCharClass(first) {\n    if (first == null) {\n      first = false\n    }\n    return mapClass(classTrie.get(this.nextCodePoint()))\n  }\n\n  nextBreak() {\n    // get the first char if we're at the beginning of the string\n    if (this.curClass == null) {\n      this.curClass = mapFirst(this.nextCharClass())\n    }\n\n    while (this.pos < this.string.length) {\n      this.lastPos = this.pos\n      const lastClass = this.nextClass\n      this.nextClass = this.nextCharClass()\n\n      // explicit newline\n      if (this.curClass === BK || (this.curClass === CR && this.nextClass !== LF)) {\n        this.curClass = mapFirst(mapClass(this.nextClass))\n        return new Break(this.lastPos, true)\n      }\n\n      // handle classes not handled by the pair table\n      let cur = null\n      switch (this.nextClass) {\n        case SP:\n          cur = this.curClass\n          break\n        case BK:\n        case LF:\n        case NL:\n          cur = BK\n          break\n        case CR:\n          cur = CR\n          break\n        case CB:\n          cur = BA\n          break\n      }\n\n      if (cur != null) {\n        this.curClass = cur\n        if (this.nextClass === CB) {\n          return new Break(this.lastPos)\n        }\n        continue\n      }\n\n      // if not handled already, use the pair table\n      let shouldBreak = false\n      switch (pairTable[this.curClass][this.nextClass]) {\n        case DI_BRK: // Direct break\n          shouldBreak = true\n          break\n        case IN_BRK: // possible indirect break\n          shouldBreak = lastClass === SP\n          break\n        case CI_BRK: // prohibited for combining marks\n          shouldBreak = lastClass === SP\n          if (!shouldBreak) {\n            continue\n          }\n          break\n        case CP_BRK:\n          if (lastClass !== SP) {\n            continue\n          }\n      }\n\n      this.curClass = this.nextClass\n      if (shouldBreak) {\n        return new Break(this.lastPos)\n      }\n    }\n\n    if (this.pos >= this.string.length) {\n      if (this.lastPos < this.string.length) {\n        this.lastPos = this.string.length\n        return new Break(this.string.length)\n      } else {\n        return null\n      }\n    }\n  }\n}\n\nfunction mapClass(c) {\n  switch (c) {\n    case AI:\n      return AL\n    case SA:\n    case SG:\n    case XX:\n      return AL\n    case CJ:\n      return NS\n    default:\n      return c\n  }\n}\n\nfunction mapFirst(c) {\n  switch (c) {\n    case LF:\n    case NL:\n      return BK\n    case CB:\n      return BA\n    case SP:\n      return WJ\n    default:\n      return c\n  }\n}\n\nfunction hex2ab(hex) {\n  const view = new Uint8Array(hex.length / 2)\n\n  for (let i = 0; i < hex.length; i += 2) {\n    view[i / 2] = parseInt(hex.substring(i, i + 2), 16)\n  }\n\n  return view\n}\n"]},"metadata":{},"sourceType":"script"}