{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nrequire(\"dotenv\").config();\n\nvar express = require(\"express\");\n\nvar path = require(\"path\");\n\nvar mongoose = require(\"mongoose\");\n\nvar routes = require(\"./routes\");\n\nvar PORT = process.env.PORT || 3001;\nvar app = express();\n\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return mongoose.connect(process.env.MONGODB_URI, {\n            useUnifiedTopology: true,\n            useNewUrlParser: true,\n            useCreateIndex: true\n          });\n\n        case 3:\n          // Define middleware here\n          app.use(express.urlencoded({\n            extended: true\n          }));\n          app.use(express.json()); // Use routes\n\n          app.use(\"/api\", routes); // Send every request to the React app\n          // Define any API routes before this runs\n\n          app.get(\"/auth_config.json\", function (req, res) {\n            res.sendFile(path.join(__dirname, \"auth_config.json\"));\n          });\n          app.get(\"*\", function (req, res) {\n            res.sendFile(path.join(__dirname, \"./Project_3_Markup/login.html\"));\n          }); // Serve up static assets (usually on heroku)\n          // if (process.env.NODE_ENV === \"production\") {\n\n          app.use(express.static(__dirname + \"/Project_3_Markup\")); // }\n\n          process.on(\"SIGINT\", function () {\n            process.exit();\n          });\n          app.listen(PORT, function () {\n            console.log(\"\\uD83C\\uDF0E ==> API server now on port \".concat(PORT, \"!\"));\n          });\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"an err occurred==>>\", _context.t0);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 13]]);\n}))();","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/server.js"],"names":["require","config","express","path","mongoose","routes","PORT","process","env","app","connect","MONGODB_URI","useUnifiedTopology","useNewUrlParser","useCreateIndex","use","urlencoded","extended","json","get","req","res","sendFile","join","__dirname","static","on","exit","listen","console","log"],"mappings":";;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMM,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,GAAG,GAAGP,OAAO,EAAnB;;AAEA,yDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGSE,QAAQ,CAACM,OAAT,CAAiBH,OAAO,CAACC,GAAR,CAAYG,WAA7B,EAA0C;AAC9CC,YAAAA,kBAAkB,EAAE,IAD0B;AAE9CC,YAAAA,eAAe,EAAE,IAF6B;AAG9CC,YAAAA,cAAc,EAAE;AAH8B,WAA1C,CAHT;;AAAA;AASG;AACAL,UAAAA,GAAG,CAACM,GAAJ,CAAQb,OAAO,CAACc,UAAR,CAAmB;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAnB,CAAR;AACAR,UAAAA,GAAG,CAACM,GAAJ,CAAQb,OAAO,CAACgB,IAAR,EAAR,EAXH,CAaG;;AACAT,UAAAA,GAAG,CAACM,GAAJ,CAAQ,MAAR,EAAgBV,MAAhB,EAdH,CAgBG;AACA;;AACAI,UAAAA,GAAG,CAACU,GAAJ,CAAQ,mBAAR,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzCA,YAAAA,GAAG,CAACC,QAAJ,CAAanB,IAAI,CAACoB,IAAL,CAAUC,SAAV,EAAqB,kBAArB,CAAb;AACD,WAFD;AAIAf,UAAAA,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,YAAAA,GAAG,CAACC,QAAJ,CAAanB,IAAI,CAACoB,IAAL,CAAUC,SAAV,EAAqB,+BAArB,CAAb;AACD,WAFD,EAtBH,CA0BG;AACA;;AACAf,UAAAA,GAAG,CAACM,GAAJ,CAAQb,OAAO,CAACuB,MAAR,CAAeD,SAAS,GAAG,mBAA3B,CAAR,EA5BH,CA6BG;;AAEAjB,UAAAA,OAAO,CAACmB,EAAR,CAAW,QAAX,EAAqB,YAAY;AAC/BnB,YAAAA,OAAO,CAACoB,IAAR;AACD,WAFD;AAIAlB,UAAAA,GAAG,CAACmB,MAAJ,CAAWtB,IAAX,EAAiB,YAAY;AAC3BuB,YAAAA,OAAO,CAACC,GAAR,mDAA6CxB,IAA7C;AACD,WAFD;AAnCH;AAAA;;AAAA;AAAA;AAAA;AAuCGuB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAvCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD","sourcesContent":["require(\"dotenv\").config();\nconst express = require(\"express\");\nconst path = require(\"path\");\nconst mongoose = require(\"mongoose\");\nconst routes = require(\"./routes\");\n\nconst PORT = process.env.PORT || 3001;\nconst app = express();\n\n(async () => {\n  try {\n    // Connect to the Mongo DB\n    await mongoose.connect(process.env.MONGODB_URI, {\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n      useCreateIndex: true,\n    });\n\n    // Define middleware here\n    app.use(express.urlencoded({ extended: true }));\n    app.use(express.json());\n\n    // Use routes\n    app.use(\"/api\", routes);\n\n    // Send every request to the React app\n    // Define any API routes before this runs\n    app.get(\"/auth_config.json\", (req, res) => {\n      res.sendFile(path.join(__dirname, \"auth_config.json\"));\n    });\n\n    app.get(\"*\", function (req, res) {\n      res.sendFile(path.join(__dirname, \"./Project_3_Markup/login.html\"));\n    });\n\n    // Serve up static assets (usually on heroku)\n    // if (process.env.NODE_ENV === \"production\") {\n    app.use(express.static(__dirname + \"/Project_3_Markup\"));\n    // }\n\n    process.on(\"SIGINT\", function () {\n      process.exit();\n    });\n\n    app.listen(PORT, function () {\n      console.log(`ðŸŒŽ ==> API server now on port ${PORT}!`);\n    });\n  } catch (err) {\n    console.log(\"an err occurred==>>\", err);\n  }\n})();\n"]},"metadata":{},"sourceType":"script"}