{"ast":null,"code":"'use strict'; // page 60\n// Filters: page 65\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar PDFObject = require('./object');\n\nmodule.exports = /*#__PURE__*/function () {\n  function PDFStream(object) {\n    _classCallCheck(this, PDFStream);\n\n    if (!object) {\n      object = new PDFObject();\n    }\n\n    object.content = this;\n    this.object = object;\n    this.content = '';\n  } // slice(begin, end) {\n  //   this.content = this.content.slice(begin, end)\n  //   this.object.prop('Length', this.content.length - 1)\n  // }\n\n\n  _createClass(PDFStream, [{\n    key: \"writeLine\",\n    value: function writeLine(str) {\n      this.content += str + '\\n';\n      this.object.prop('Length', this.content.length - 1);\n    }\n  }, {\n    key: \"toReference\",\n    value: function toReference() {\n      return this.object.toReference();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var content = this.content;\n\n      if (content instanceof Uint8Array) {\n        content = uint8ToString(content) + '\\n';\n      }\n\n      return 'stream\\n' + content + 'endstream';\n    }\n  }]);\n\n  return PDFStream;\n}(); // source: http://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n\n\nfunction uint8ToString(u8a) {\n  var CHUNK_SZ = 0x8000;\n  var c = [];\n\n  for (var i = 0; i < u8a.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, u8a.subarray(i, i + CHUNK_SZ)));\n  }\n\n  return c.join('');\n}","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/pdfjs/lib/object/stream.js"],"names":["PDFObject","require","module","exports","object","content","str","prop","length","toReference","Uint8Array","uint8ToString","u8a","CHUNK_SZ","c","i","push","String","fromCharCode","apply","subarray","join"],"mappings":"AAAA,a,CAEA;AACA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,UAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP;AACE,qBAAYC,MAAZ,EAAoB;AAAA;;AAClB,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,IAAIJ,SAAJ,EAAT;AACD;;AAEDI,IAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACA,SAAKD,MAAL,GAAeA,MAAf;AACA,SAAKC,OAAL,GAAe,EAAf;AACD,GATH,CAWE;AACA;AACA;AACA;;;AAdF;AAAA;AAAA,WAgBE,mBAAUC,GAAV,EAAe;AACb,WAAKD,OAAL,IAAgBC,GAAG,GAAG,IAAtB;AACA,WAAKF,MAAL,CAAYG,IAAZ,CAAiB,QAAjB,EAA2B,KAAKF,OAAL,CAAaG,MAAb,GAAsB,CAAjD;AACD;AAnBH;AAAA;AAAA,WAqBE,uBAAc;AACZ,aAAO,KAAKJ,MAAL,CAAYK,WAAZ,EAAP;AACD;AAvBH;AAAA;AAAA,WAyBE,oBAAW;AACT,UAAIJ,OAAO,GAAG,KAAKA,OAAnB;;AACA,UAAIA,OAAO,YAAYK,UAAvB,EAAmC;AACjCL,QAAAA,OAAO,GAAGM,aAAa,CAACN,OAAD,CAAb,GAAyB,IAAnC;AACD;;AAED,aAAO,aAAaA,OAAb,GAAuB,WAA9B;AACD;AAhCH;;AAAA;AAAA,I,CAmCA;;;AACA,SAASM,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAMC,QAAQ,GAAG,MAAjB;AACA,MAAMC,CAAC,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACJ,MAAxB,EAAgCO,CAAC,IAAIF,QAArC,EAA+C;AAC7CC,IAAAA,CAAC,CAACE,IAAF,CAAOC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCP,GAAG,CAACQ,QAAJ,CAAaL,CAAb,EAAgBA,CAAC,GAAGF,QAApB,CAAhC,CAAP;AACD;;AACD,SAAOC,CAAC,CAACO,IAAF,CAAO,EAAP,CAAP;AACD","sourcesContent":["'use strict'\n\n// page 60\n// Filters: page 65\n\nconst PDFObject = require('./object')\n\nmodule.exports = class PDFStream {\n  constructor(object) {\n    if (!object) {\n      object = new PDFObject()\n    }\n\n    object.content = this\n    this.object  = object\n    this.content = ''\n  }\n\n  // slice(begin, end) {\n  //   this.content = this.content.slice(begin, end)\n  //   this.object.prop('Length', this.content.length - 1)\n  // }\n\n  writeLine(str) {\n    this.content += str + '\\n'\n    this.object.prop('Length', this.content.length - 1)\n  }\n\n  toReference() {\n    return this.object.toReference()\n  }\n\n  toString() {\n    let content = this.content\n    if (content instanceof Uint8Array) {\n      content = uint8ToString(content) + '\\n'\n    }\n\n    return 'stream\\n' + content + 'endstream'\n  }\n}\n\n// source: http://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\nfunction uint8ToString(u8a) {\n  const CHUNK_SZ = 0x8000\n  const c = []\n  for (let i = 0; i < u8a.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, u8a.subarray(i, i + CHUNK_SZ)))\n  }\n  return c.join('')\n}\n"]},"metadata":{},"sourceType":"script"}