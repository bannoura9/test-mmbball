{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Fragment = require('./fragment');\n\nvar util = require('./util');\n\nvar ops = require('./ops');\n\nvar PDF = require('./object');\n\nmodule.exports = /*#__PURE__*/function () {\n  function Table(doc, parent, opts) {\n    _classCallCheck(this, Table);\n\n    Fragment.prototype._init.call(this, doc, parent);\n\n    this._cursor = this._cursor.clone();\n\n    if ('width' in opts) {\n      this._cursor.width = opts.width;\n    }\n\n    this._rowCount = 0;\n    this.widths = [];\n    applyOpts.call(this, opts);\n\n    if (this.borderVerticalWidths) {\n      this._cursor.width -= this.borderVerticalWidths[0] / 2;\n      this._cursor.startX += this.borderVerticalWidths[0] / 2;\n      this._cursor.width -= this.borderVerticalWidths[this.borderVerticalWidths.length - 1] / 2;\n    } // distribute remaining width among *-columns\n\n\n    var remainingWidth = this._cursor.width;\n    var distribute = [];\n\n    for (var i in this.widths) {\n      var w = this.widths[i];\n\n      if (!w || w === '*') {\n        distribute.push(i);\n      } else {\n        remainingWidth -= w;\n      }\n    }\n\n    if (distribute.length > 0) {\n      var _w = remainingWidth / distribute.length;\n\n      var _iterator = _createForOfIteratorHelper(distribute),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _i = _step.value;\n          this.widths[_i] = _w;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    this._header = null;\n  } /// private API\n\n\n  _createClass(Table, [{\n    key: \"_pageBreak\",\n    value: function () {\n      var _pageBreak2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(level, insideBreak) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Fragment.prototype._pageBreak.call(this, level);\n\n              case 2:\n                if (insideBreak) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return this._renderHeader(true);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _pageBreak(_x, _x2) {\n        return _pageBreak2.apply(this, arguments);\n      }\n\n      return _pageBreak;\n    }()\n  }, {\n    key: \"_end\",\n    value: function () {\n      var _end2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Fragment.prototype._end.call(this);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _end() {\n        return _end2.apply(this, arguments);\n      }\n\n      return _end;\n    }()\n  }, {\n    key: \"_begin\",\n    value: function _begin(ctx) {\n      Fragment.prototype._begin.call(this, ctx);\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function () {\n      var _renderHeader2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(isPageBreak) {\n        var chunk, offset, _iterator2, _step2, obj, alias;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this._header) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                if (this._doc._currentContent) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 5;\n                return this._doc._startPage();\n\n              case 5:\n                chunk = '';\n                offset = this._cursor.y - this._header.startedAtY;\n\n                if (isPageBreak && offset !== 0) {\n                  // offset header to the top\n                  chunk += ops.q() + ops.cm(1, 0, 0, 1, 0, offset);\n                }\n\n                _iterator2 = _createForOfIteratorHelper(this._header._objects);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    obj = _step2.value;\n                    alias = new PDF.Name('TH' + obj.id);\n                    this._doc._currentContent._xobjects[alias] = obj.toReference();\n                    chunk += ops.Do(alias);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                this._cursor.y -= this._header.height;\n\n                if (isPageBreak && offset !== 0) {\n                  chunk += ops.Q();\n                }\n\n                _context3.next = 14;\n                return this._doc._write(chunk);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _renderHeader(_x3) {\n        return _renderHeader2.apply(this, arguments);\n      }\n\n      return _renderHeader;\n    }()\n  }, {\n    key: \"_row\",\n    value: function _row(opts, isHeader) {\n      if (!opts || typeof opts !== 'object') {\n        opts = {};\n      }\n\n      opts = Object.assign({\n        font: this._doc.defaultFont,\n        fontSize: this._doc.defaultFontSize,\n        color: this._doc.defaultColor,\n        lineHeight: this._doc.defaultLineHeight\n      }, this.opts, opts); // whitelist\n\n      opts = {\n        padding: opts.padding,\n        paddingLeft: opts.paddingLeft,\n        paddingRight: opts.paddingRight,\n        paddingTop: opts.paddingTop,\n        paddingBottom: opts.paddingBottom,\n        backgroundColor: opts.backgroundColor,\n        font: opts.font,\n        fontSize: opts.fontSize,\n        color: opts.color,\n        lineHeight: opts.lineHeight,\n        minHeight: opts.minHeight\n      };\n      var Row = isHeader ? require('./tableheader') : require('./row');\n      var ctx = new Row(this._doc, this, opts);\n\n      this._begin(ctx);\n\n      ctx._widths = this.widths.slice();\n      ctx._borderVerticalWidths = this.borderVerticalWidths && this.borderVerticalWidths.slice();\n      ctx._borderVerticalColors = this.borderVerticalColors && this.borderVerticalColors.slice();\n\n      if (this.borderHorizontalWidths) {\n        ctx._topBorderWidth = this.borderHorizontalWidths(this._rowCount);\n        ctx._topBorderColor = util.colorToRgb(this.borderHorizontalColors(this._rowCount));\n\n        if (!isHeader) {\n          ctx._bottomBorderWidth = this.borderHorizontalWidths(this._rowCount + 1);\n          ctx._bottomBorderColor = util.colorToRgb(this.borderHorizontalColors(this._rowCount + 1));\n        }\n\n        ctx._hasTopBorder = this._rowCount === (this._header ? 1 : 0);\n      }\n\n      ctx._pending.push(function () {\n        return ctx._start();\n      });\n\n      this._pending.push(ctx._pending);\n\n      this._rowCount++;\n      return ctx;\n    } /// public API\n\n  }, {\n    key: \"end\",\n    value: function end() {\n      return Fragment.prototype.end.call(this);\n    }\n  }, {\n    key: \"row\",\n    value: function row(opts) {\n      return this._row(opts, false);\n    }\n  }, {\n    key: \"header\",\n    value: function header(opts) {\n      var _this = this;\n\n      if (this._header) {\n        throw new Error('The table already has a header, add additional rows to the existing table header instead');\n      }\n\n      var ctx = this._row(opts, true);\n\n      this._header = ctx;\n\n      this._pending.push(function () {\n        return _this._renderHeader();\n      });\n\n      return ctx;\n    }\n  }]);\n\n  return Table;\n}();\n\nfunction applyOpts(opts) {\n  this.opts = opts; // opts.width\n\n  if ('widths' in opts && Array.isArray(opts.widths)) {\n    this.widths = opts.widths;\n  } else {\n    throw new TypeError('widths (array) option is required for tables');\n  } // opts.borderVerticalWidths\n\n\n  this.borderVerticalWidths = null;\n\n  if (opts.borderVerticalWidths) {\n    if (!Array.isArray(opts.borderVerticalWidths)) {\n      throw new TypeError('borderVerticalWidths must be an array');\n    }\n\n    if (opts.borderVerticalWidths.length !== this.widths.length + 1) {\n      throw new TypeError(\"wrong borderVerticalWidths length (expected \".concat(this.widths.length + 1, \"; got \").concat(opts.borderVerticalWidths.length, \")\"));\n    }\n\n    this.borderVerticalWidths = opts.borderVerticalWidths;\n  } // opts.borderVerticalWidth\n  else if (typeof opts.borderVerticalWidth === 'number') {\n      this.borderVerticalWidths = [];\n\n      for (var i = 0; i <= this.widths.length; ++i) {\n        this.borderVerticalWidths.push(opts.borderVerticalWidth);\n      }\n    } // opts.borderVerticalColors\n\n\n  this.borderVerticalColors = null;\n\n  if (opts.borderVerticalColors) {\n    if (!Array.isArray(opts.borderVerticalColors)) {\n      throw new TypeError('borderVerticalColors must be an array');\n    }\n\n    if (opts.borderVerticalColors.length !== this.widths.length + 1) {\n      throw new TypeError(\"wrong borderVerticalColors length (expected \".concat(this.widths.length + 1, \"; got \").concat(opts.borderVerticalColors.length, \")\"));\n    }\n\n    this.borderVerticalColors = opts.borderVerticalColors.map(function (c) {\n      return util.colorToRgb(c);\n    });\n  } // opts.borderVerticalColor\n  else if (typeof opts.borderVerticalColor === 'number') {\n      this.borderVerticalColors = [];\n      var color = util.colorToRgb(opts.borderVerticalColor);\n\n      for (var _i2 = 0; _i2 <= this.widths.length; ++_i2) {\n        this.borderVerticalColors.push(color);\n      }\n    } // opts.borderHorizontalWidths\n\n\n  this.borderHorizontalWidths = null;\n\n  if (opts.borderHorizontalWidths) {\n    if (typeof opts.borderHorizontalWidths !== 'function') {\n      throw new TypeError('borderHorizontalWidths must be a function');\n    }\n\n    this.borderHorizontalWidths = opts.borderHorizontalWidths;\n  } // opts.borderHorizontalWidth\n  else if (typeof opts.borderHorizontalWidth === 'number') {\n      this.borderHorizontalWidths = function () {\n        return opts.borderHorizontalWidth;\n      };\n    } // opts.borderHorizontalColors\n\n\n  this.borderHorizontalColors = null;\n\n  if (opts.borderHorizontalColors) {\n    if (typeof opts.borderHorizontalColors !== 'function') {\n      throw new TypeError('borderHorizontalColors must be a function');\n    }\n\n    this.borderHorizontalColors = opts.borderHorizontalColors;\n  } // opts.borderHorizontalColor\n  else if (typeof opts.borderHorizontalColor === 'number') {\n      this.borderHorizontalColors = function () {\n        return opts.borderHorizontalColor;\n      };\n    } // opts.borderWidth\n\n\n  var borderWidth = opts.borderWidth || 0;\n\n  if (borderWidth > 0) {\n    if (!this.borderVerticalWidths) {\n      this.borderVerticalWidths = [];\n\n      for (var _i3 = 0; _i3 <= this.widths.length; ++_i3) {\n        this.borderVerticalWidths.push(borderWidth);\n      }\n    }\n\n    if (!this.borderHorizontalWidths) {\n      this.borderHorizontalWidths = function () {\n        return borderWidth;\n      };\n    }\n  } // opts.borderColor\n\n\n  var borderColor = opts.borderColor || 0x000000;\n\n  if (!this.borderVerticalColors) {\n    this.borderVerticalColors = [];\n\n    for (var _i4 = 0; _i4 <= this.widths.length; ++_i4) {\n      this.borderVerticalColors.push(util.colorToRgb(borderColor));\n    }\n  }\n\n  if (!this.borderHorizontalColors) {\n    this.borderHorizontalColors = function () {\n      return borderColor;\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/pdfjs/lib/table.js"],"names":["Fragment","require","util","ops","PDF","module","exports","doc","parent","opts","prototype","_init","call","_cursor","clone","width","_rowCount","widths","applyOpts","borderVerticalWidths","startX","length","remainingWidth","distribute","i","w","push","_header","level","insideBreak","_pageBreak","_renderHeader","_end","ctx","_begin","isPageBreak","_doc","_currentContent","_startPage","chunk","offset","y","startedAtY","q","cm","_objects","obj","alias","Name","id","_xobjects","toReference","Do","height","Q","_write","isHeader","Object","assign","font","defaultFont","fontSize","defaultFontSize","color","defaultColor","lineHeight","defaultLineHeight","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","minHeight","Row","_widths","slice","_borderVerticalWidths","_borderVerticalColors","borderVerticalColors","borderHorizontalWidths","_topBorderWidth","_topBorderColor","colorToRgb","borderHorizontalColors","_bottomBorderWidth","_bottomBorderColor","_hasTopBorder","_pending","_start","end","_row","Error","Array","isArray","TypeError","borderVerticalWidth","map","c","borderVerticalColor","borderHorizontalWidth","borderHorizontalColor","borderWidth","borderColor"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Fragment = require('./fragment')\nconst util = require('./util')\nconst ops = require('./ops')\nconst PDF = require('./object')\n\nmodule.exports = class Table {\n  constructor(doc, parent, opts) {\n    Fragment.prototype._init.call(this, doc, parent)\n\n    this._cursor = this._cursor.clone()\n    if ('width' in opts) {\n      this._cursor.width = opts.width\n    }\n\n    this._rowCount = 0\n    this.widths = []\n\n    applyOpts.call(this, opts)\n\n    if (this.borderVerticalWidths) {\n      this._cursor.width -= this.borderVerticalWidths[0] / 2\n      this._cursor.startX += this.borderVerticalWidths[0] / 2\n      this._cursor.width -= this.borderVerticalWidths[this.borderVerticalWidths.length - 1] / 2\n    }\n\n    // distribute remaining width among *-columns\n    let remainingWidth = this._cursor.width\n    const distribute = []\n\n    for (const i in this.widths) {\n      const w = this.widths[i]\n      if (!w || w === '*') {\n        distribute.push(i)\n      } else {\n        remainingWidth -= w\n      }\n    }\n\n    if (distribute.length > 0) {\n      const w = remainingWidth / distribute.length\n\n      for (const i of distribute) {\n        this.widths[i] = w\n      }\n    }\n\n    this._header = null\n  }\n\n  /// private API\n\n  async _pageBreak(level, insideBreak) {\n    await Fragment.prototype._pageBreak.call(this, level)\n\n    if (!insideBreak) {\n      await this._renderHeader(true)\n    }\n  }\n\n  async _end() {\n    await Fragment.prototype._end.call(this)\n  }\n\n  _begin(ctx) {\n    Fragment.prototype._begin.call(this, ctx)\n  }\n\n  async _renderHeader(isPageBreak) {\n    if (!this._header) {\n      return\n    }\n\n    if (!this._doc._currentContent) {\n      await this._doc._startPage()\n    }\n\n    let chunk = ''\n\n    const offset = this._cursor.y - this._header.startedAtY\n\n    if (isPageBreak && offset !== 0) {\n      // offset header to the top\n      chunk += ops.q()\n             + ops.cm(1, 0, 0, 1, 0, offset)\n    }\n\n    for (const obj of this._header._objects) {\n      const alias = new PDF.Name('TH' + obj.id)\n      this._doc._currentContent._xobjects[alias] = obj.toReference()\n      chunk += ops.Do(alias)\n    }\n\n    this._cursor.y -= this._header.height\n\n    if (isPageBreak && offset !== 0) {\n      chunk += ops.Q()\n    }\n\n    await this._doc._write(chunk)\n\n  }\n\n  _row(opts, isHeader) {\n    if (!opts || typeof opts !== 'object') {\n      opts = {}\n    }\n\n    opts = Object.assign({\n      font: this._doc.defaultFont,\n      fontSize: this._doc.defaultFontSize,\n      color: this._doc.defaultColor,\n      lineHeight: this._doc.defaultLineHeight,\n    }, this.opts, opts)\n\n    // whitelist\n    opts = {\n      padding: opts.padding,\n      paddingLeft: opts.paddingLeft,\n      paddingRight: opts.paddingRight,\n      paddingTop: opts.paddingTop,\n      paddingBottom: opts.paddingBottom,\n      backgroundColor: opts.backgroundColor,\n      font: opts.font,\n      fontSize: opts.fontSize,\n      color: opts.color,\n      lineHeight: opts.lineHeight,\n      minHeight: opts.minHeight,\n    }\n\n    const Row = isHeader ? require('./tableheader') : require('./row')\n    const ctx = new Row(this._doc, this, opts)\n    this._begin(ctx)\n\n    ctx._widths = this.widths.slice()\n    ctx._borderVerticalWidths = this.borderVerticalWidths && this.borderVerticalWidths.slice()\n    ctx._borderVerticalColors = this.borderVerticalColors && this.borderVerticalColors.slice()\n\n    if (this.borderHorizontalWidths) {\n      ctx._topBorderWidth = this.borderHorizontalWidths(this._rowCount)\n      ctx._topBorderColor = util.colorToRgb(this.borderHorizontalColors(this._rowCount))\n\n      if (!isHeader) {\n        ctx._bottomBorderWidth = this.borderHorizontalWidths(this._rowCount + 1)\n        ctx._bottomBorderColor = util.colorToRgb(this.borderHorizontalColors(this._rowCount + 1))\n      }\n\n      ctx._hasTopBorder = this._rowCount === (this._header ? 1 : 0)\n    }\n\n    ctx._pending.push(() => ctx._start())\n    this._pending.push(ctx._pending)\n\n    this._rowCount++\n\n    return ctx\n  }\n\n  /// public API\n\n  end() {\n    return Fragment.prototype.end.call(this)\n  }\n\n  row(opts) {\n    return this._row(opts, false)\n  }\n\n  header(opts) {\n    if (this._header) {\n      throw new Error('The table already has a header, add additional rows to the existing table header instead')\n    }\n    const ctx = this._row(opts, true)\n    this._header = ctx\n    this._pending.push(() => this._renderHeader())\n    return ctx\n  }\n}\n\nfunction applyOpts(opts) {\n  this.opts = opts\n\n  // opts.width\n  if ('widths' in opts && Array.isArray(opts.widths)) {\n    this.widths = opts.widths\n  } else {\n    throw new TypeError('widths (array) option is required for tables')\n  }\n\n  // opts.borderVerticalWidths\n  this.borderVerticalWidths = null\n  if (opts.borderVerticalWidths) {\n    if (!Array.isArray(opts.borderVerticalWidths)) {\n      throw new TypeError('borderVerticalWidths must be an array')\n    }\n\n    if (opts.borderVerticalWidths.length !== this.widths.length + 1) {\n      throw new TypeError(`wrong borderVerticalWidths length (expected ${this.widths.length + 1}; got ${opts.borderVerticalWidths.length})`)\n    }\n\n    this.borderVerticalWidths = opts.borderVerticalWidths\n  }\n  // opts.borderVerticalWidth\n  else if (typeof opts.borderVerticalWidth === 'number') {\n    this.borderVerticalWidths = []\n    for (let i = 0; i <= this.widths.length; ++i) {\n      this.borderVerticalWidths.push(opts.borderVerticalWidth)\n    }\n  }\n\n  // opts.borderVerticalColors\n  this.borderVerticalColors = null\n  if (opts.borderVerticalColors) {\n    if (!Array.isArray(opts.borderVerticalColors)) {\n      throw new TypeError('borderVerticalColors must be an array')\n    }\n\n    if (opts.borderVerticalColors.length !== this.widths.length + 1) {\n      throw new TypeError(`wrong borderVerticalColors length (expected ${this.widths.length + 1}; got ${opts.borderVerticalColors.length})`)\n    }\n\n    this.borderVerticalColors = opts.borderVerticalColors.map(c => util.colorToRgb(c))\n  }\n  // opts.borderVerticalColor\n  else if (typeof opts.borderVerticalColor === 'number') {\n    this.borderVerticalColors = []\n    const color = util.colorToRgb(opts.borderVerticalColor)\n    for (let i = 0; i <= this.widths.length; ++i) {\n      this.borderVerticalColors.push(color)\n    }\n  }\n\n  // opts.borderHorizontalWidths\n  this.borderHorizontalWidths = null\n  if (opts.borderHorizontalWidths) {\n    if (typeof opts.borderHorizontalWidths !== 'function') {\n      throw new TypeError('borderHorizontalWidths must be a function')\n    }\n\n    this.borderHorizontalWidths = opts.borderHorizontalWidths\n  }\n  // opts.borderHorizontalWidth\n  else if (typeof opts.borderHorizontalWidth === 'number') {\n    this.borderHorizontalWidths = () => opts.borderHorizontalWidth\n  }\n\n  // opts.borderHorizontalColors\n  this.borderHorizontalColors = null\n  if (opts.borderHorizontalColors) {\n    if (typeof opts.borderHorizontalColors !== 'function') {\n      throw new TypeError('borderHorizontalColors must be a function')\n    }\n\n    this.borderHorizontalColors = opts.borderHorizontalColors\n  }\n  // opts.borderHorizontalColor\n  else if (typeof opts.borderHorizontalColor === 'number') {\n    this.borderHorizontalColors = () => opts.borderHorizontalColor\n  }\n\n  // opts.borderWidth\n  const borderWidth = opts.borderWidth || 0\n  if (borderWidth > 0) {\n    if (!this.borderVerticalWidths) {\n      this.borderVerticalWidths = []\n      for (let i = 0; i <= this.widths.length; ++i) {\n        this.borderVerticalWidths.push(borderWidth)\n      }\n    }\n\n    if (!this.borderHorizontalWidths) {\n      this.borderHorizontalWidths = () => borderWidth\n    }\n  }\n\n  // opts.borderColor\n  const borderColor = opts.borderColor || 0x000000\n  if (!this.borderVerticalColors) {\n    this.borderVerticalColors = []\n    for (let i = 0; i <= this.widths.length; ++i) {\n      this.borderVerticalColors.push(util.colorToRgb(borderColor))\n    }\n  }\n\n  if (!this.borderHorizontalColors) {\n    this.borderHorizontalColors = () => borderColor\n  }\n}"]},"metadata":{},"sourceType":"script"}