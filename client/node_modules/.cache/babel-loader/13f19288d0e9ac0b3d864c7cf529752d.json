{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { flattenDeep, groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\nvar playlistIds = [\"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\", \"PLtAzkECGU1yXhKBF1t-pJmH8S1nuBiu8z\"];\n\nvar VideoLibrary = function VideoLibrary() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      playlists = _useState2[0],\n      setPlaylists = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      videos = _useState4[0],\n      setVideos = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      videosCopy = _useState6[0],\n      setVideosCopy = _useState6[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var playlistRes, playlistResJsOn, playlistItemsResJsOn, filteredVideos;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"https://www.googleapis.com/youtube/v3/playlists?\" + new URLSearchParams({\n                key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                part: \"id,snippet\",\n                id: playlistIds.join(\",\")\n              }));\n\n            case 3:\n              playlistRes = _context2.sent;\n              _context2.next = 6;\n              return playlistRes.json();\n\n            case 6:\n              playlistResJsOn = _context2.sent;\n              setPlaylists(playlistResJsOn.items.map(function (_ref2) {\n                var id = _ref2.id,\n                    snippet = _ref2.snippet;\n                return {\n                  id: id,\n                  title: snippet.localized.title\n                };\n              }));\n              _context2.next = 10;\n              return Promise.all(playlistIds.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(playlistId) {\n                  var playlistItemsRes;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetch(\"https://www.googleapis.com/youtube/v3/playlistItems?\" + new URLSearchParams({\n                            part: \"snippet\",\n                            key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                            channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                            maxResults: 200,\n                            playlistId: playlistId\n                          }));\n\n                        case 2:\n                          playlistItemsRes = _context.sent;\n                          return _context.abrupt(\"return\", playlistItemsRes.json());\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 10:\n              playlistItemsResJsOn = _context2.sent;\n              filteredVideos = flattenDeep(playlistItemsResJsOn.map(function (playlistItems) {\n                return playlistItems.items.map(function (i) {\n                  return i.snippet;\n                });\n              }));\n              setVideos(filteredVideos);\n              setVideosCopy(filteredVideos); //   setPlaylists(mockData.playlists);\n              //   setVideos(mockData.videos);\n              //   setVideosCopy(mockData.videos);\n\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"err==>>\", _context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16]]);\n    }))();\n  }, []);\n\n  var filterVideos = function filterVideos(e) {\n    var value = e.target.value;\n\n    if (value) {\n      setVideos(videosCopy.filter(function (v) {\n        return v.playlistId === value;\n      }));\n    } else {\n      setVideos(videosCopy);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"10\", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: filterVideos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"All Categories\"), playlists.map(function (p, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: p.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, p.title);\n  })), /*#__PURE__*/React.createElement(RecentlyAdded, {\n    videos: videos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoLibrary;","map":{"version":3,"sources":["/Users/mikebannoura/Dropbox/My Mac (MacBook-Pro-Mike.local)/Desktop/mmbball-app/client/src/components/video-library.jsx"],"names":["React","useEffect","useState","flattenDeep","groupBy","RecentlyAdded","mockData","playlistIds","VideoLibrary","playlists","setPlaylists","videos","setVideos","videosCopy","setVideosCopy","fetch","URLSearchParams","key","part","id","join","playlistRes","json","playlistResJsOn","items","map","snippet","title","localized","Promise","all","playlistId","channelId","maxResults","playlistItemsRes","playlistItemsResJsOn","filteredVideos","playlistItems","i","console","log","filterVideos","e","value","target","filter","v","p"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { flattenDeep, groupBy } from \"lodash\";\nimport RecentlyAdded from \"../components/modules/recently-added\";\nimport mockData from \"../data.json\";\n\nconst playlistIds = [\n  \"PLtAzkECGU1yXDNefSuSbxODu9hrRK0UtP\",\n  \"PLtAzkECGU1yXhKBF1t-pJmH8S1nuBiu8z\",\n];\n\nconst VideoLibrary = () => {\n  const [playlists, setPlaylists] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const [videosCopy, setVideosCopy] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const playlistRes = await fetch(\n          \"https://www.googleapis.com/youtube/v3/playlists?\" +\n            new URLSearchParams({\n              key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n              part: \"id,snippet\",\n              id: playlistIds.join(\",\"),\n            })\n        );\n        const playlistResJsOn = await playlistRes.json();\n        setPlaylists(\n          playlistResJsOn.items.map(({ id, snippet }) => ({\n            id,\n            title: snippet.localized.title,\n          }))\n        );\n\n        const playlistItemsResJsOn = await Promise.all(\n          playlistIds.map(async (playlistId) => {\n            const playlistItemsRes = await fetch(\n              \"https://www.googleapis.com/youtube/v3/playlistItems?\" +\n                new URLSearchParams({\n                  part: \"snippet\",\n                  key: \"AIzaSyCAH8cKrD6ASDhtfMYIfEGzNU6v9mcltRI\",\n                  channelId: \"UCHBDAkjxufCaEfmRaf7Bj3Q\",\n                  maxResults: 200,\n                  playlistId,\n                })\n            );\n            return playlistItemsRes.json();\n          })\n        );\n        const filteredVideos = flattenDeep(\n          playlistItemsResJsOn.map((playlistItems) =>\n            playlistItems.items.map((i) => i.snippet)\n          )\n        );\n        setVideos(filteredVideos);\n        setVideosCopy(filteredVideos);\n        //   setPlaylists(mockData.playlists);\n        //   setVideos(mockData.videos);\n        //   setVideosCopy(mockData.videos);\n      } catch (err) {\n        console.log(\"err==>>\", err);\n      }\n    })();\n  }, []);\n\n  const filterVideos = (e) => {\n    const { value } = e.target;\n    if (value) {\n      setVideos(videosCopy.filter((v) => v.playlistId === value));\n    } else {\n      setVideos(videosCopy);\n    }\n  };\n\n  return (\n    <div>10\n      <select onChange={filterVideos}>\n        <option value=\"\">All Categories</option>\n        {playlists.map((p, i) => (\n          <option key={i} value={p.id}>\n            {p.title}\n          </option>\n        ))}\n      </select>\n      <RecentlyAdded videos={videos} />\n    </div>\n  );\n};\n\nexport default VideoLibrary;\n"]},"metadata":{},"sourceType":"module"}